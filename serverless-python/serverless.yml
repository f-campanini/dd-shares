service: aws-python-flask-dynamodb-api

frameworkVersion: '2 || 3'

custom:
  tableName: 'users-table-${self:provider.stage}'
  wsgi:
    app: app.app
#1  datadog:
#1    addExtension: true
#1    apiKey: # your DD API key

provider:
  name: aws
  runtime: python3.9
  lambdaHashingVersion: '20211216'
  deploymentBucket:  #<bucket name> specify an existing bucket 
  stage: beta # defualt is dev, changed into beta to find it quickly :)
  region: eu-central-1 # the region where my dd integration with AWS through cloudformation is configured
  profile: default # the profile name in the file ~/.aws/credentials for serverless
#1  tags: # more here https://docs.datadoghq.com/getting_started/tagging/unified_service_tagging/?tab=kubernetes#aws-lambda-functions
#1    env: dev # dd tag for the environment
#1    service: aws-python-flask-dynamodb-api # dd tag for service name
#1    version: '1.0' # dd tag for app version
#1    datadog: true 
#1    owner: francesco
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [ UsersTable, Arn ]
  environment:
    USERS_TABLE: ${self:custom.tableName}

functions:
  api:
    handler: wsgi_handler.handler
    events:
      - http:
          path: /
          method: ANY
      - http:
          path: /{proxy+}
          method: ANY

plugins:
  - serverless-wsgi
  - serverless-python-requirements
#1  - serverless-plugin-datadog # needed to gather metrics

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.tableName}
